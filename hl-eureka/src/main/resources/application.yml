spring:
  application:
    name: hl-eureka
server:
  port: 8000

eureka:
  instance:
    hostname: ${EUREKA_HOSTNAME:localhost}
  client:
    # eureka.client.fetch-registry: 表示是否从 Eureka Server 获取注册信息，默认为true。如果这是一个单点的 Eureka Server，不需要同步其他节点的数据，设为false
    fetch-registry: false
    # eureka.client.register-with-eureka: 表示是否将自己注册到 Eureka Server, 默认为true。由于当前应用就是 Eureka Server, 因此设为 false
    register-with-eureka: false
    # 设置 Eureka Server 所在的地址，查询服务和注册服务都需要依赖这个地址
    service-url:
      defaultZone: ${EUREKA_SEVICE_URLS:http://${eureka.instance.hostname}:${server.port}/eureka}  #http://${eureka.instance.hostname}:${server.port}/eureka

#eureka---
#spring:
#  application:
#    name: hl-eureka
#  profiles: service1
#server:
#  port: 8001
#eureka:
#  instance:
#    hostname: service1
#    prefer-ip-address: false
#  client:
#    service-url:
#      defaultZone: http://service2:8002/eureka,http://service3:8003/eureka
#---
#spring:
#  application:
#    name: hl-eureka
#  profiles: service2
#server:
#  port: 8002
#eureka:
#  instance:
#    hostname: service2
#    prefer-ip-address: false
#  client:
#    service-url:
#      defaultZone: http://service1:8001/eureka,http://service3:8003/eureka
#---
#spring:
#  application:
#    name: hl-eureka
#  profiles: service3
#server:
#  port: 8003
#eureka:
#  instance:
#    hostname: service3
#    prefer-ip-address: false
#  client:
#    service-url:
#      defaultZone: http://service1:8001/eureka,http://service2:8002/eureka
